
: dup      0i PICK       ( a -- a a )   ;
: over     1i PICK     ( a x -- a x a ) ;
: swap  2i 1i ROTATE   ( a b -- b a )   ;
: rot   3i 1i ROTATE ( a b c -- b c a ) ;
: roll     1i ROTATE ;
: lorr    -1i ROTATE ;

comptime : if
  there           ( -- p0)
  -1i SEW_JMP0    ( forward JMP0 placeholder; targets `else` or `then` )
  (IF box        ( p0 -- p0:IF) )
;

comptime : else
  ( IF unbox          ( p0:IF -- p0) )
  there                ( p0 -- p0 p1 )
  -1i SEW_JMP    ( forward JMP placeholder, targets then )
  there             ( p0 p1 -- p0 p1 p2 )
  rot navigate dup    ( ... -- p1 p2 p2)
  SEW_ADDR            ( ... -- p1 p2)
  navigate            ( ... -- p1 )
  ( IF box               ( p1 -- p1:IF) )
;

comptime : then
  ( IF unbox     (p1:IF -- p1) )
  there there rot ( p1 -- t1 t1 p1 )
  navigate  ( t1 t1 p1 -- t1 t1 )
  SEW_ADDR     ( t1 t1 -- t1 )
  navigate        ( t1 -- )
;
